import { ethers } from "ethers";
import dotenv from "dotenv";

// Load environment variables from the .env file
dotenv.config();

// Contract ABI (replace with your actual contract ABI)
const abi = [
	{
		"inputs": [
			{
				"internalType": "uint256",
				"name": "ticketID",
				"type": "uint256"
			}
		],
		"name": "acceptSwap",
		"outputs": [],
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "uint256",
				"name": "ticketID",
				"type": "uint256"
			}
		],
		"name": "offerSwap",
		"outputs": [],
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"inputs": [],
		"name": "purchaseTicket",
		"outputs": [],
		"stateMutability": "payable",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "uint256",
				"name": "ticketID",
				"type": "uint256"
			}
		],
		"name": "returnTicket",
		"outputs": [],
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"anonymous": false,
		"inputs": [
			{
				"indexed": false,
				"internalType": "uint256",
				"name": "ticketID",
				"type": "uint256"
			},
			{
				"indexed": false,
				"internalType": "address",
				"name": "purchaser",
				"type": "address"
			}
		],
		"name": "TicketPurchased",
		"type": "event"
	},
	{
		"anonymous": false,
		"inputs": [
			{
				"indexed": false,
				"internalType": "uint256",
				"name": "ticketID",
				"type": "uint256"
			},
			{
				"indexed": false,
				"internalType": "address",
				"name": "returner",
				"type": "address"
			},
			{
				"indexed": false,
				"internalType": "uint256",
				"name": "refundAmount",
				"type": "uint256"
			}
		],
		"name": "TicketReturned",
		"type": "event"
	},
	{
		"anonymous": false,
		"inputs": [
			{
				"indexed": false,
				"internalType": "uint256",
				"name": "ticketID",
				"type": "uint256"
			},
			{
				"indexed": false,
				"internalType": "address",
				"name": "acceptor",
				"type": "address"
			}
		],
		"name": "TicketSwapAccepted",
		"type": "event"
	},
	{
		"anonymous": false,
		"inputs": [
			{
				"indexed": false,
				"internalType": "uint256",
				"name": "ticketID",
				"type": "uint256"
			},
			{
				"indexed": false,
				"internalType": "address",
				"name": "offerer",
				"type": "address"
			}
		],
		"name": "TicketSwapOffered",
		"type": "event"
	},
	{
		"inputs": [
			{
				"internalType": "address",
				"name": "user",
				"type": "address"
			}
		],
		"name": "getTicketByAddress",
		"outputs": [
			{
				"internalType": "uint256[]",
				"name": "",
				"type": "uint256[]"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "uint256",
				"name": "ticketID",
				"type": "uint256"
			}
		],
		"name": "getTicketInfo",
		"outputs": [
			{
				"internalType": "address",
				"name": "",
				"type": "address"
			},
			{
				"internalType": "bool",
				"name": "",
				"type": "bool"
			},
			{
				"internalType": "bool",
				"name": "",
				"type": "bool"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [],
		"name": "serviceFee",
		"outputs": [
			{
				"internalType": "uint256",
				"name": "",
				"type": "uint256"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [],
		"name": "ticketCounter",
		"outputs": [
			{
				"internalType": "uint256",
				"name": "",
				"type": "uint256"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "uint256",
				"name": "",
				"type": "uint256"
			}
		],
		"name": "tickets",
		"outputs": [
			{
				"internalType": "address",
				"name": "owner",
				"type": "address"
			},
			{
				"internalType": "bool",
				"name": "isPurchased",
				"type": "bool"
			},
			{
				"internalType": "bool",
				"name": "isSwapPending",
				"type": "bool"
			}
		],
		"stateMutability": "view",
		"type": "function"
	}
];

// Contract bytecode (replace with your actual contract bytecode)
const bytecode = "608060405267016345785d8a0000600155348015601a575f80fd5b50611201806100285f395ff3fe608060405260043610610085575f3560e01c806350b447121161005857806350b447121461011f5780638abdf5aa1461015d5780638c4d59d014610187578063da30bd1a146101b1578063ff99a063146101d957610085565b80631bf330041461008957806321846c76146100b1578063406b2c2c146100bb5780634ac15662146100e3575b5f80fd5b348015610094575f80fd5b506100af60048036038101906100aa9190610be1565b610217565b005b6100b96103d4565b005b3480156100c6575f80fd5b506100e160048036038101906100dc9190610be1565b61053d565b005b3480156100ee575f80fd5b5061010960048036038101906101049190610c66565b610706565b6040516101169190610d48565b60405180910390f35b34801561012a575f80fd5b5061014560048036038101906101409190610be1565b6108b5565b60405161015493929190610d91565b60405180910390f35b348015610168575f80fd5b50610171610912565b60405161017e9190610dd5565b60405180910390f35b348015610192575f80fd5b5061019b610918565b6040516101a89190610dd5565b60405180910390f35b3480156101bc575f80fd5b506101d760048036038101906101d29190610be1565b61091d565b005b3480156101e4575f80fd5b506101ff60048036038101906101fa9190610be1565b610ae4565b60405161020e93929190610d91565b60405180910390f35b60025f8281526020019081526020015f205f0160159054906101000a900460ff16610277576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161026e90610e48565b60405180910390fd5b5f60025f8381526020019081526020015f205f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361031b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161031290610eb0565b60405180910390fd5b3360025f8481526020019081526020015f205f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505f60025f8481526020019081526020015f205f0160156101000a81548160ff0219169083151502179055507fd400d0bf8b4ae602bee73fe6e31b8487352b615ff415c67d5c217b92b5fe38ba82336040516103c8929190610ece565b60405180910390a15050565b670de0b6b3a7640000341461041e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161041590610f3f565b60405180910390fd5b5f8081548092919061042f90610f8a565b919050555060405180606001604052803373ffffffffffffffffffffffffffffffffffffffff1681526020016001151581526020015f151581525060025f805481526020019081526020015f205f820151815f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151815f0160146101000a81548160ff0219169083151502179055506040820151815f0160156101000a81548160ff0219169083151502179055509050507f785f2865353ae960010300f584fc6c577b757a853af69a99c769df3c8232d3de5f5433604051610533929190610ece565b60405180910390a1565b60025f8281526020019081526020015f205f0160149054906101000a900460ff1661059d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105949061101b565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff1660025f8381526020019081526020015f205f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461063d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161063490611083565b60405180910390fd5b60025f8281526020019081526020015f205f0160159054906101000a900460ff161561069e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610695906110eb565b60405180910390fd5b600160025f8381526020019081526020015f205f0160156101000a81548160ff0219169083151502179055507f0c429c57e135043f6747763fe5b3b53a88a48f2f03c709eaeb8634d2bf3d3f7c81336040516106fb929190610ece565b60405180910390a150565b60605f805467ffffffffffffffff81111561072457610723611109565b5b6040519080825280602002602001820160405280156107525781602001602082028036833780820191505090505b5090505f80600190505b5f54811161080b578473ffffffffffffffffffffffffffffffffffffffff1660025f8381526020019081526020015f205f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036107f857808383815181106107dd576107dc611136565b5b60200260200101818152505081806107f490610f8a565b9250505b808061080390610f8a565b91505061075c565b505f8167ffffffffffffffff81111561082757610826611109565b5b6040519080825280602002602001820160405280156108555781602001602082028036833780820191505090505b5090505f5b828110156108a95783818151811061087557610874611136565b5b60200260200101518282815181106108905761088f611136565b5b602002602001018181525050808060010191505061085a565b50809350505050919050565b6002602052805f5260405f205f91509050805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690805f0160149054906101000a900460ff1690805f0160159054906101000a900460ff16905083565b60015481565b5f5481565b3373ffffffffffffffffffffffffffffffffffffffff1660025f8381526020019081526020015f205f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146109bd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109b490611083565b60405180910390fd5b60025f8281526020019081526020015f205f0160149054906101000a900460ff16610a1d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a149061101b565b60405180910390fd5b5f600154670de0b6b3a7640000610a349190611163565b90505f60025f8481526020019081526020015f205f0160146101000a81548160ff0219169083151502179055503373ffffffffffffffffffffffffffffffffffffffff166108fc8290811502906040515f60405180830381858888f19350505050158015610aa4573d5f803e3d5ffd5b507f40b7887f382a28c53f89b0e0eeef2b760e0ab00538c3fd30eccdbb41229c57e7823383604051610ad893929190611196565b60405180910390a15050565b5f805f8060025f8681526020019081526020015f206040518060600160405290815f82015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020015f820160149054906101000a900460ff161515151581526020015f820160159054906101000a900460ff1615151515815250509050805f015181602001518260400151935093509350509193909250565b5f80fd5b5f819050919050565b610bc081610bae565b8114610bca575f80fd5b50565b5f81359050610bdb81610bb7565b92915050565b5f60208284031215610bf657610bf5610baa565b5b5f610c0384828501610bcd565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610c3582610c0c565b9050919050565b610c4581610c2b565b8114610c4f575f80fd5b50565b5f81359050610c6081610c3c565b92915050565b5f60208284031215610c7b57610c7a610baa565b5b5f610c8884828501610c52565b91505092915050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b610cc381610bae565b82525050565b5f610cd48383610cba565b60208301905092915050565b5f602082019050919050565b5f610cf682610c91565b610d008185610c9b565b9350610d0b83610cab565b805f5b83811015610d3b578151610d228882610cc9565b9750610d2d83610ce0565b925050600181019050610d0e565b5085935050505092915050565b5f6020820190508181035f830152610d608184610cec565b905092915050565b610d7181610c2b565b82525050565b5f8115159050919050565b610d8b81610d77565b82525050565b5f606082019050610da45f830186610d68565b610db16020830185610d82565b610dbe6040830184610d82565b949350505050565b610dcf81610bae565b82525050565b5f602082019050610de85f830184610dc6565b92915050565b5f82825260208201905092915050565b7f4e6f2073776170206f6666657220666f722074686973207469636b65742e00005f82015250565b5f610e32601e83610dee565b9150610e3d82610dfe565b602082019050919050565b5f6020820190508181035f830152610e5f81610e26565b9050919050565b7f596f752063616e6e6f742073776170207769746820796f757273656c662e00005f82015250565b5f610e9a601e83610dee565b9150610ea582610e66565b602082019050919050565b5f6020820190508181035f830152610ec781610e8e565b9050919050565b5f604082019050610ee15f830185610dc6565b610eee6020830184610d68565b9392505050565b7f5469636b657420707269636520697320312065746865722e00000000000000005f82015250565b5f610f29601883610dee565b9150610f3482610ef5565b602082019050919050565b5f6020820190508181035f830152610f5681610f1d565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610f9482610bae565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610fc657610fc5610f5d565b5b600182019050919050565b7f5469636b6574206e6f74207075726368617365642e00000000000000000000005f82015250565b5f611005601583610dee565b915061101082610fd1565b602082019050919050565b5f6020820190508181035f83015261103281610ff9565b9050919050565b7f596f7520646f6e2774206f776e2074686973207469636b65742e0000000000005f82015250565b5f61106d601a83610dee565b915061107882611039565b602082019050919050565b5f6020820190508181035f83015261109a81611061565b9050919050565b7f5377617020616c72656164792070656e64696e672e00000000000000000000005f82015250565b5f6110d5601583610dee565b91506110e0826110a1565b602082019050919050565b5f6020820190508181035f830152611102816110c9565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f61116d82610bae565b915061117883610bae565b92508282039050818111156111905761118f610f5d565b5b92915050565b5f6060820190506111a95f830186610dc6565b6111b66020830185610d68565b6111c36040830184610dc6565b94935050505056fea2646970667358221220fea9e907012700211ff606b5d8ed17599d1db2bbc60d9d4245bfcc6817ff5d8364736f6c634300081a0033";  // Your bytecode here

// Setup provider for Sepolia network using Infura
const provider = ethers.getDefaultProvider("sepolia", {
  infura: process.env.INFURA_PROJECT_ID,
});

// Signer (using your private key)
const signer = new ethers.Wallet(process.env.PRIVATE_KEY, provider);

async function main() {
  try {
    console.log("Deploying contract...");

    // Create ContractFactory with the ABI, bytecode, and signer
    const contractFactory = new ethers.ContractFactory(abi, bytecode, signer);

    // Deploy the contract
    const contract = await contractFactory.deploy();

    console.log(`Contract deployed at address: ${contract.address}`);

    // Wait for the deployment transaction to be mined
    await contract.deployTransaction.wait();

    console.log("Deployment successful!");
  } catch (error) {
    console.error("Error deploying contract:", error);
  }
}

// Execute the main function to deploy the contract
main();
